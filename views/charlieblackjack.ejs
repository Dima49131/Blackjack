<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">

<!--
 This file has been put into the public domain by its
 author, David Eck (http://math.hws.edu/eck), with no
 guarantees or claims about what it might be good for.
 Please note that the card images used in this game are
 from the Gnome Desktop project, which uses the GPL
 license.  The prototype and scriptaculous JavaScript
 libraries that are used on this page have their own license.
-->

<html>
<head>
<title>Blackjack in Javascript</title>

<script type="text/javascript" src="js/charlieCards.js"></script>
<script type="text/javascript" src="js/DisplayedCard.js"></script>
<script type="text/javascript" src="js/prototype.js"></script>
<script type="text/javascript" src="js/scriptaculous.js?load=effects"></script>
<script type="text/javascript" src="js/effects.js"></script>
<script type="text/javascript" src="js/PopupForm.js"></script>
<script type="text/javascript" src="js/homepage.js"></script>



<!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<script type="text/javascript" src="js/cards.js"></script>


<script type="text/javascript" src="js/main.js"></script>






<link rel="stylesheet" type="text/css" href="css/Navbar.css">
<link rel="stylesheet" type="text/css" href="css/PopupForm.css">
<link rel="stylesheet" type="text/css" href="css/charlie_blackjack.css">

<script type="text/javascript">

var dealerCards = [];  // Arrays holding the DisplayCard objects used to show the cards
var playerCards = [];

dealerCards.count = 0;  // Number of cards actually in the dealer's hand
playerCards.count = 0;   // Number of cards actually in the player's hand

var deck = new Deck();

var gameInProgress = false;

var bet;
var betInput;
var money;
var moneyDisplay;
var message;

var standButton, hitButton, newGameButton, doubleButton;  // objects representing the buttons, so I can enable/disable them

function setup() {
    for (var i = 1; i <= 5; i++) {
       dealerCards[i] = new DisplayedCard("dealer" + i);
       dealerCards[i].cardContainer.style.display = "none";
       playerCards[i] = new DisplayedCard("player" + i);
       playerCards[i].cardContainer.style.display = "none";
    }
    message = document.getElementById("message");
    standButton = document.getElementById("standButton");
    hitButton = document.getElementById("hitButton");
    doubleButton = document.getElementById("doubleButton")
    newGameButton = document.getElementById("newGameButton");
    moneyDisplay = document.getElementById("money");
    money = parseFloat(localStorage.getItem("balanceupdate"));
    moneyDisplay.innerHTML = "$" + money;
    betInput = document.getElementById("bet");
    betInput.value = 1;
    betInput.disabled = false;
    standButton.disabled = true;
    hitButton.disabled = true;
    doubleButton.disabled = true;
    newGameButton.disabled = false;
}


function dealCard(cards, runOnFinish, faceDown) {
    var crd = deck.nextCard();
    cards.count++;
    if (faceDown)
       cards[cards.count].setFaceDown();
    else
       cards[cards.count].setFaceUp();
    cards[cards.count].setCard(crd);
    new Effect.SlideDown(cards[cards.count].cardContainer, {
       duration: 0.5,
       queue: "end",
       afterFinish: runOnFinish
    });
}

function getTotal(hand) {
   var total = 0;
   var ace = false;
   for (var i = 1; i <= hand.count; i++) {
       total += Math.min(10, hand[i].card.value); 
       if (hand[i].card.value == 1)
          ace = true;
   }
   if (total + 10 <= 21 && ace)
      total += 10;
   return total;
}

function startGame() {
   if (!gameInProgress) {
      var betText = betInput.value;
      if ( ! betText.match(/^[0-9]+$/) || betText < 1 || betText > money) {
          message.innerHTML = "Bet must be a number between 1 and " + money + 
               ".<br>Fix this problem and press New Game again.";
          new Effect.Shake("betdiv");
          return;
      }
      betInput.disabled = true;
      bet = Number(betText);
      for (var i = 1; i <= 5; i++) {
          playerCards[i].cardContainer.style.display = "none";
          playerCards[i].setFaceDown();
          dealerCards[i].cardContainer.style.display = "none";
          dealerCards[i].setFaceDown();
      }
      message.innerHTML = "Dealing Cards";
      deck.shuffle();
      dealerCards.count = 0;
      playerCards.count = 0;
      dealCard(playerCards);
      dealCard(dealerCards);
      dealCard(playerCards);
      dealCard(dealerCards, function() {
             standButton.disabled = false;
             hitButton.disabled = false;
             doubleButton.disabled = false;
             newGameButton.disabled = true;
             gameInProgress = true;
             var dealerTotal = getTotal(dealerCards);
             var playerTotal = getTotal(playerCards);
             if (dealerTotal == 21) {
                if (playerTotal == 21)
                    endGame(false, "You both have Blackjack, but dealer wins on ties.");
                else
                    endGame(false, "Dealer has Blackjack.");
             }
             else if (playerTotal == 21)
                endGame(true, "You have Blackjack.");
             else
                message.innerHTML = "You have " + playerTotal +".  Hit or Stand?";
          }, true);
   }
}

function endGame(win, why) {
     if (win)
         money += bet;
     else
         money -= bet;
     message.innerHTML = (win ? "Congratulations! You win.  " : "Sorry! You lose.  ") + why + 
           (money > 0 ? "<br>Click New Game to play again." : "<br>Looks like you've run out of money!");
     standButton.disabled = true;
     hitButton.disabled = true;
     doubleButton.disabled = true;
     newGameButton.disabled = true;
     gameInProgress = false;
     if (dealerCards[2].faceDown) {
       dealerCards[2].cardContainer.style.display = "none";
       dealerCards[2].setFaceUp();
       new Effect.SlideDown(dealerCards[2].cardContainer, { duration: 0.5, queue: "end" });
     }
     new Effect.Fade(moneyDisplay, {
        duration: 0.5,
        queue: "end",
        afterFinish: function() {
            moneyDisplay.innerHTML = "$" + money;
            new Effect.Appear(moneyDisplay, {
               duration: 0.5,
               queue: "end",
               afterFinish: function() {
                   if (money <= 0) {
                        betInput.value = "BUSTED";
                        new Effect.Shake(moneyDisplay);
                   }
                   else {
                       if (bet > money)
                          betInput.value = money;
                       standButton.disabled = true;
                       hitButton.disabled = true;
                       doubleButton.disabled = true;
                       newGameButton.disabled = false;
                       betInput.disabled = false;
                   }
               }
            });
        }
     });
}


function dealersTurnAndEndGame() {
    message.innerHTML = "Dealer's turn...";
    dealerCards[2].cardContainer.style.display = "none";
    dealerCards[2].setFaceUp();
    var takeNextCardOrFinish = function() {
       new Effect.SlideDown(dealerCards[dealerCards.count].cardContainer, {
          duration: 0.5,
          queue: "end",
          afterFinish: function() {
              var dealerTotal = getTotal(dealerCards);
              if (dealerCards.count < 5 && dealerTotal <= 16) {
                  dealerCards.count++;
                  dealerCards[dealerCards.count].setCard(deck.nextCard());
		          dealerCards[dealerCards.count].setFaceUp();
                  takeNextCardOrFinish();
              }
              else if (dealerTotal > 21)
                 endGame(true, "Dealer has gone over 21.");
              else if (dealerCards.count == 5)
                 endGame(false, "Dealer took 5 cards without going over 21.");
              else {
                 var playerTotal = getTotal(playerCards);
                 if (playerTotal > dealerTotal)
                    endGame(true, "You have " + playerTotal + ". Dealer has " + dealerTotal + ".");
                 else if (playerTotal < dealerTotal)
                    endGame(false, "You have " + playerTotal + ". Dealer has " + dealerTotal + ".");
                 else
                    endGame(false, "You and the dealer are tied at " + playerTotal + ".");
              }
          }
       });
    };
    takeNextCardOrFinish();
}

function hit() {
   if (!gameInProgress)
      return;
   standButton.disabled = true;
   hitButton.disabled = true;
   doubleButton.disabled = true;
   dealCard(playerCards, function() {
      var playerTotal = getTotal(playerCards);
      if (playerTotal > 21)
         endGame(false, "YOU WENT OVER 21!");
      else if (playerCards.count == 5)
         endGame(true, "You took 5 cards without going over 21.");
      else if (playerTotal == 21)
         dealersTurnAndEndGame();
      else {
         message.innerHTML = "You have " + playerTotal + ". Hit or Stand?";
         hitButton.disabled = false;
         doubleButton.disabled = false;
         standButton.disabled = false;
      }
   });
}

//double down

function doubledown() { 
    if (!gameInProgress) return;

    // Check if the player has two or fewer cards
    if (playerCards.count > 2) {
        message.innerHTML = "You can only double down with two cards.";
        new Effect.Shake("betdiv"); // Shake the bet input field to indicate the error
        return; // Exit the function
    }

    // Calculate new bet amount (double the current bet)
    var newBet = bet * 2; 

    // Check if the balance is sufficient for doubling down
    if (newBet > money) {
        message.innerHTML = "You do not have enough money to double down!";
        new Effect.Shake("betdiv"); // Shake the bet input field to indicate the error
        return; // Exit the function
    }

    standButton.disabled = true;
    hitButton.disabled = true;
    doubleButton.disabled = true;

    // Double the player's bet
    bet = newBet; // Update the current bet
    updateBetDisplay(bet); // Update the displayed bet amount

    // Proceed to deal one more card to the player
    dealCard(playerCards, function() {
        var playerTotal = getTotal(playerCards);
        if (playerTotal > 21) {
            endGame(false, "YOU WENT OVER 21!");
        } else if (playerCards.count == 5) {
            endGame(true, "You took 5 cards without going over 21.");
        } else if (playerTotal == 21) {
            dealersTurnAndEndGame();
        } else {
            dealersTurnAndEndGame();
        }
    });
}



// Function to update the displayed bet amount
function updateBetDisplay(bet) {
    // Assuming you have an element to display the bet amount
    document.getElementById("bet").value = bet; // Update the bet input field
}


function stand() {
   if (!gameInProgress)
      return;
   hitButton.disabled = true;
   doubleButton.disabled = true;
   standButton.disabled = true;
   dealersTurnAndEndGame();
}

onload=setup;

</script>
</head>
<body>

    <div class="Navbar">
        <a href="/homepage" class="SiteNameHeader">Retro Arcade</a>
    
        <div class="Navbar-Links">
         <!--
            <a href="/">Our Team</a>
            <a href="/">Contact Us</a>
    -->
            
            <!-- Is here if we wanna add more links-->
        </div>
    
        <% if (id) { %>
            
            <div class="sub-container-navbar">
                <!--<div id="username"><%= name %></div>-->
                <div id="tokenbalance"><%= tokenBalance.toFixed(2) %> Tokens</div>
                <div>
                    <form action="/logout?_method=DELETE" method="POST">
                        <button  class="commonButton" id="logoutButton" type="submit">Log Out</button>
                    </form>
                </div>
            </div>
    
        <% } else { %>
            <div class="sub-container-navbar">
                <div id="tokenbalance"></div>
                <button class="commonButton" id="loginButton">Add Tokens</button>
            </div>
            <% } %>
    </div>

<table align=center cellpadding=0 cellspacing=10 border=0;>
<tr><td>
<div id="blackjack_container" style="position: relative; border: thick solid #660; background-color: #280; width: 579px; height:500px">
    <div style="position: absolute; left:20px; top:15px; color:#9F9; font-size:large">Dealer's cards:</div>
    <div id="dealer1" style="position: absolute; left: 50px; top:50px;  border: 2px solid #660; background-color: #660"></div>
    <div id="dealer2" style="position: absolute; left: 150px; top:50px;  border: 2px solid #660; background-color: #660"></div>
    <div id="dealer3" style="position: absolute; left: 250px; top:50px;  border: 2px solid #660; background-color: #660"></div>
    <div id="dealer4" style="position: absolute; left: 350px; top:50px;  border: 2px solid #660; background-color: #660"></div>
    <div id="dealer5" style="position: absolute; left: 450px; top:50px;  border: 2px solid #660; background-color: #660"></div>
    <div style="position: absolute; left:20px; top:210px; color:#9F9; font-size:large">Your cards:</div>
    <div id="player1" style="position: absolute; left: 50px; top:250px;  border: 2px solid #660; background-color: #660"></div>
    <div id="player2" style="position: absolute; left: 150px; top:250px;  border: 2px solid #660; background-color: #660"></div>
    <div id="player3" style="position: absolute; left: 250px; top:250px;  border: 2px solid #660; background-color: #660"></div>
    <div id="player4" style="position: absolute; left: 350px; top:250px;  border: 2px solid #660; background-color: #660"></div>
    <div id="player5" style="position: absolute; left: 450px; top:250px;  border: 2px solid #660; background-color: #660"></div>
    <div style="position: absolute; left:20px; top: 410px; color:#9F9; font-size:large">You have:</div>
    <div id="money" style="position: absolute; left: 70px; top:445px; color:yellow; font-size:x-large"></div>
    <div id="betdiv" style="position:absolute; left:300px; top:425px">
       <span style="color:#9F9">Your bet:</span>&nbsp; <input type=text size=6 id="bet">
    </div>
</div>
</td></tr>
<tr><td align=center>
<input type=button id="hitButton" value="Hit" onclick="hit()" disabled>
<input type=button id="doubleButton" value="DoubleDown" onclick="doubledown()" disabled>
<input type=button id="standButton" value="Stand" onclick="stand()" disabled>
<input type=button id="newGameButton" value="New Game" onClick="startGame()">
</td></tr>
<tr><td align=center>
<span id="message" style="color:#600; font-weight:bold">Welcome to Blackjack!<br>Click "New Game" to Begin.</span>
</td></tr>
</table>
</body>
